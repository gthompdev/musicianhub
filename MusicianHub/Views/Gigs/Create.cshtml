@model MusicianHub.ViewModels.GigFormViewModel
@{
    ViewBag.Title = "Create";
    //may need to add a layout here
    //look at "adding a basic view" video
    //look at "Basics of building forms with bootstrap"
}

<h2>Add a Gig</h2>
@using (Html.BeginForm("Create", "Gigs"))
{
    <p class="alert alert-info">All fields are <strong >required.</strong></p>
    @Html.AntiForgeryToken()<!--to avoid csrf-->
    <div class="form-group">
        @Html.LabelFor(m => m.Venue) <!--lambda expression-->
        @Html.TextBoxFor(m => m.Venue, new { @class = "form-control", autofocus = "autofocus" })<!--form control gives the text boxes rounded corners and styling. The second param is called an anonymous object-->
        @Html.ValidationMessageFor(m => m.Venue)
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Date)
        @Html.TextBoxFor(m => m.Date, new { @class = "form-control", placeholder = "eg 1 Jan 2018" })
        @Html.ValidationMessageFor(m => m.Date)
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Time)
        @Html.TextBoxFor(m => m.Time, new { @class = "form-control", placeholder = "eg 20:00" })
        @Html.ValidationMessageFor(m => m.Time)
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Genre)
        @Html.DropDownListFor(m => m.Genre, new SelectList(Model.Genres, "Id", "Name"), "", new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.Genre)
    </div>
    <button type="submit" class="btn btn-primary">Save</button>
}

@section scripts
{
    @Scripts.Render("~/bundles/jqueryval")<!--come back to add client side validation-->
}
